#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>
#define NUM_THREADS 3
void* print_message(void* thread_id) {
    long tid = (long)thread_id;
    printf("Thread %ld is starting.\n", tid);
    sleep(1);
    printf("Thread %ld has finished.\n", tid);
    pthread_exit(NULL);
}
int main() {
    pthread_t threads[NUM_THREADS];
    int result_code;
    long t;
    for (t = 0; t < NUM_THREADS; t++) {
        printf("Creating thread %ld\n", t);
        result_code = pthread_create(&threads[t], NULL, print_message, (void*)t);
        if (result_code) {
            printf("Error creating thread %ld: %d\n", t, result_code);
            exit(-1);
        }
    }
    for (t = 0; t < NUM_THREADS; t++) {
        pthread_join(threads[t], NULL);
    }
    printf("All threads completed.\n");
    return 0;
}
