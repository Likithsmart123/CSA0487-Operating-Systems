#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/ipc.h>
#include <sys/msg.h>
struct message {
    long message_type;
    char message_text[100];
};
int main() {
    key_t key;
    int msgid;
    key = ftok("progfile", 65);
    if (key == -1) {
        perror("ftok");
        exit(EXIT_FAILURE);
    }
    msgid = msgget(key, 0666 | IPC_CREAT);
    if (msgid == -1) {
        perror("msgget");
        exit(EXIT_FAILURE);
    }
    struct message msg;
    int choice;
    printf("Select role:\n1. Sender\n2. Receiver\nEnter choice: ");
    scanf("%d", &choice);
    getchar();
    if (choice == 1) {
        msg.message_type = 1;
        printf("Enter message to send: ");
        fgets(msg.message_text, sizeof(msg.message_text), stdin);
        msg.message_text[strcspn(msg.message_text, "\n")] = '\0';
        
        if (msgsnd(msgid, &msg, sizeof(msg.message_text), 0) == -1) {
            perror("msgsnd");
            exit(EXIT_FAILURE);
        }
        printf("Message sent: %s\n", msg.message_text);
    } else if (choice == 2) {
        if (msgrcv(msgid, &msg, sizeof(msg.message_text), 1, 0) == -1) {
            perror("msgrcv");
            exit(EXIT_FAILURE);
        }
        printf("Message received: %s\n", msg.message_text);
        
        if (msgctl(msgid, IPC_RMID, NULL) == -1) {
            perror("msgctl");
            exit(EXIT_FAILURE);
        }
        printf("Message queue deleted.\n");
    } else {
        printf("Invalid choice!\n");
    }
    return 0;
}
